{"version":3,"sources":["img/layer3.png","img/layer1.png","img/layer2.png","img/about-layer.png","components/LandingPage.jsx","components/SearchBar.jsx","components/AboutPage.jsx","components/ResultPage.jsx","components/MainPage.jsx","components/Dashboard.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","LandingPage","React","memo","children","adjustTextLayer","w","document","documentElement","clientWidth","getElementById","style","left","navBody","querySelector","window","pageYOffset","classList","add","remove","useEffect","layer1","layer0","scroll","textLayer","logo","about","addEventListener","e","offset","top","color","className","href","id","src","layer3","alt","layer2","SearchBar","pop","setPop","selectDropdown","i","getElementsByClassName","value","searchBar","onClick","toggle","name","placeholder","type","setTimeout","AboutPage","ResultPage","position","getBoundingClientRect","scrollTo","behavior","MainPage","useState","body","getElementsByTagName","Dashboard","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.173d7a3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/layer3.1f1544b4.png\";","module.exports = __webpack_public_path__ + \"static/media/layer1.7bc09400.png\";","module.exports = __webpack_public_path__ + \"static/media/layer2.13499336.png\";","module.exports = __webpack_public_path__ + \"static/media/about-layer.6dba1c0a.png\";","import React, { useEffect } from 'react';\r\nimport layer3 from '../img/layer3.png';\r\nimport layer1 from '../img/layer1.png';\r\nimport layer2 from '../img/layer2.png';\r\nimport '../styles/LandingPage.css';\r\n\r\nconst LandingPage = React.memo(({children}) =>{\r\n    function adjustTextLayer(){\r\n        let w = document.documentElement.clientWidth;\r\n        let offset = 450;\r\n        let textLayer = document.getElementById(\"text-layer1\");\r\n        textLayer.style.left = ((w - offset)/2) + 'px';\r\n\r\n        let navBody = document.querySelector(\".nav-body\");\r\n\r\n        if(w <= 870 && window.pageYOffset >= 350){\r\n            navBody.classList.add(\"hide\");\r\n        }else{\r\n            navBody.classList.remove(\"hide\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let layer1 = document.getElementById(\"layer1\");\r\n        let layer0 = document.getElementById(\"layer0\");\r\n        let scroll = window.pageYOffset;\r\n        let textLayer = document.getElementById(\"text-layer1\");\r\n        let logo = document.querySelector(\".nav-logo a\");\r\n        let about = document.querySelector(\".nav-rightItem a\");\r\n        adjustTextLayer();\r\n\r\n        document.addEventListener('scroll', (e)=>{\r\n            let offset = window.pageYOffset;\r\n            scroll = offset;\r\n            layer1.style.top = scroll/3 +'px';\r\n            layer0.style.top = scroll/2 + 'px';\r\n            textLayer.style.top = scroll / 1.5 + 'px';\r\n            if(scroll >= 600){\r\n                logo.style.color = 'white';\r\n                about.style.color = 'white';\r\n            }else{\r\n                logo.style.color = 'black';\r\n                about.style.color = 'black';\r\n            }\r\n\r\n            let navBody = document.querySelector(\".nav-body\");\r\n\r\n            if(document.documentElement.clientWidth <= 870 && scroll >= 350){\r\n                navBody.classList.add(\"hide\");\r\n            }else{\r\n                navBody.classList.remove(\"hide\");\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"resize\", adjustTextLayer);\r\n      });\r\n    return (\r\n        <div className=\"parallax-section\">\r\n            <div className=\"nav-body stay-top\">\r\n                <div className=\"nav-logo\">\r\n                    <a href=\"#section1\">Skillset Analyser</a>\r\n                </div>\r\n                <div className=\"nav-rightItem\">\r\n                    <a href=\"#section2\">About This Page</a>\r\n                </div>\r\n            </div>\r\n            <div id=\"text-layer1\">\r\n                <p id=\"p1\">Skillset Analysis</p>\r\n                <p id=\"p2\">Find out what skill sets  <br></br> you need for your future career!</p>\r\n            </div>\r\n            {children}\r\n            <img id=\"layer0\" src={layer3} alt=\"parallax-0\"/>\r\n            <img id=\"layer1\" src={layer1} alt=\"parallax-1\"/>\r\n            <img id=\"layer2\" src={layer2} alt=\"parallax-2\"/>\r\n        </div>  \r\n    );\r\n});\r\n\r\nexport default LandingPage;","import React, { useEffect, useState } from 'react';\r\nimport \"../styles/SearchBar.css\";\r\n\r\nconst SearchBar = ({ pop, setPop}) => {\r\n    function search(){\r\n        if(pop){\r\n            setPop(false);\r\n            setTimeout(()=>{\r\n                setPop(true);\r\n            }, 100);\r\n        }else{\r\n            setPop(true);\r\n        }\r\n    }\r\n\r\n    function adjustTextLayer(){\r\n        let w = document.documentElement.clientWidth;\r\n        let offset = 600;\r\n        let searchBar = document.querySelector(\".bar\");\r\n        searchBar.style.left = ((w - offset)/2) + 'px';\r\n    }\r\n\r\n    function activeDropdown(){\r\n        let dropdown = document.getElementsByClassName(\"dropdown-content\")[0];\r\n        dropdown.classList.toggle(\"show\");\r\n    }\r\n\r\n    function selectDropdown(i){\r\n        let dropdown = document.getElementsByClassName(\"dropdown\")[0];\r\n        dropdown.value = i;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let searchBar = document.querySelector(\".bar\");\r\n        let scroll = window.pageYOffset;\r\n        adjustTextLayer();\r\n\r\n        window.addEventListener(\"resize\", adjustTextLayer);\r\n\r\n        document.addEventListener('scroll', (e)=>{\r\n            let offset = window.pageYOffset;\r\n            scroll = offset;\r\n            searchBar.style.top = 460 + scroll / 1.5 + 'px';\r\n\r\n            if(offset >= 500){\r\n                searchBar.classList.add(\"hide\");\r\n            }else{\r\n                searchBar.classList.remove(\"hide\");\r\n            }\r\n        });\r\n    })\r\n\r\n    return(\r\n        <div className=\"bar shadow\">\r\n            <div className=\"dropdown-box\" onClick={activeDropdown}>\r\n                <select name=\"type\" className=\"dropdown\">\r\n                    <option value=\"0\">Job Title</option>\r\n                    <option value=\"1\">Location</option>\r\n                </select>\r\n                <div className=\"dropdown-content shadow\">\r\n                    <div className=\"dropdown-item\" onClick={()=> selectDropdown(0)}>\r\n                        Job Title\r\n                    </div>\r\n                    <div className=\"dropdown-item\" onClick={()=> selectDropdown(1)}>\r\n                        Location\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <input className=\"text-field\" placeholder=\"Keywords....\" type=\"text\"/>\r\n            <button className=\"submit-btn\" type=\"submit\" onClick={search}>Search</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport \"../styles/AboutPage.css\";\r\nimport layer3 from '../img/about-layer.png';\r\n\r\nconst AboutPage = React.memo(() => {\r\n    return(\r\n        <div className=\"about-container\" id=\"section2\">\r\n            <div className=\"about-background\">\r\n                <img src={layer3} alt=\"background\"/>\r\n            </div>\r\n            <div className=\"about-box\">\r\n                <div className=\"title\">\r\n                    <span>About This Page</span>\r\n                </div>\r\n                <div className=\"about-content\">\r\n                    <p>It is an analysis system to reveal top trending skill set for any job position and vacancy demand at any location via using data mining method!</p>\r\n                    <p>Author's GitHub: <span id=\"link\">https://github.com/jasonlee96</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ); \r\n});\r\n\r\nexport default AboutPage;","import React, { useEffect } from 'react';\r\nimport \"../styles/ResultPage.css\";\r\n\r\nconst ResultPage = () => {\r\n    useEffect(() => {\r\n        let box = document.getElementById(\"section3\");\r\n        let position = box.getBoundingClientRect().top + 50;\r\n\r\n        window.scrollTo({\r\n            top: window.pageYOffset + position,\r\n            behavior: \"smooth\"\r\n        });\r\n    })\r\n\r\n    return(\r\n        <div className=\"result-container\" id=\"section3\">\r\n            <div className=\"result-box shadow\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultPage;","import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport { LandingPage, SearchBar, AboutPage, ResultPage } from './';\r\n\r\nconst MainPage = () => {\r\n    let [pop, setPop] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        let body = document.getElementsByTagName('body')[0];\r\n        setTimeout(()=>{\r\n        body.classList.toggle('fade');\r\n        }, 500)\r\n    });\r\n\r\n    return (\r\n        <div className=\"Main\" id=\"section1\">\r\n            <LandingPage>\r\n                <SearchBar pop={pop} setPop={setPop} />\r\n            </LandingPage>\r\n            {pop && <ResultPage />}\r\n            <AboutPage />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n    return(\r\n        <div>\r\n            <p>Hello Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque tempora maiores laudantium architecto iusto at illum, ratione veritatis a quia, assumenda eaque dignissimos animi eveniet inventore odit, consectetur molestias cum.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\nimport { MainPage, Dashboard } from './components';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/Skillset-Analysis\" exact component={MainPage} />\n        <Route path=\"/Skillset-Analysis/dashboard\" component={Dashboard} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}