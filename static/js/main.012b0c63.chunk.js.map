{"version":3,"sources":["contexts/SearchContext.jsx","components/LandingPage.jsx","config.js","components/SearchBar.jsx","components/AboutPage.jsx","components/Loading.jsx","chartConfig/barchart.js","chartConfig/piechart.js","components/ResultPage.jsx","components/MainPage.jsx","components/Dashboard.jsx","App.jsx","serviceWorker.js","index.js","img/layer3.png","img/layer1.png","img/layer2.png","img/about-layer.png"],"names":["SearchContext","createContext","SearchContextProvider","children","useState","keyword","setKeyword","store","searchType","setSearchType","Provider","value","LandingPage","React","memo","useContext","adjustTextLayer","w","document","documentElement","clientWidth","getElementById","style","left","navBody","querySelector","window","pageYOffset","classList","add","remove","useEffect","layer1","layer0","scroll","textLayer","logo","about","addEventListener","e","offset","top","color","className","href","id","key","src","layer3","alt","layer2","QueryBar","props","data","setQuery","setInput","map","item","_id","onClick","title","press","SearchBar","pop","setPop","INITIAL_STATE","loading","url","config","query","input","selectDropdown","i","getElementsByClassName","searchBar","target","contains","toggle","querybar","currentSelected","innerHTML","code","activeElement","preventDefault","index","Array","prototype","indexOf","call","length","keyCode","click","a","axios","get","encodeURI","replace","then","res","console","log","getQueryData","name","placeholder","type","onChange","setTimeout","AboutPage","Loading","legend","display","scales","xAxes","scaleLabel","labelString","fontSize","fontFamily","fontStyle","fontColor","ticks","beginAtZero","gridLines","yAxes","animation","duration","easing","position","labels","tooltips","enabled","ResultPage","state","setState","setType","type1","setType1","selectType","setSelectType","getColors","number","colorLoop","colors","push","getBoundingClientRect","scrollTo","behavior","result","getResultData","undefined","choices","querySelectorAll","dataset","results","slice","term","text","canvas","processData","datasets","label","backgroundColor","barPercentage","barThickness","categoryPercentage","Chart","options","barchartConfig","loadSkillSet","industry","count","dataArr","sort","x","y","top8Arr","otherArr","sum","reduce","accumulator","currentVal","toFixed","otherSum","borderColor","piechartConfig","tooltipModel","tooltipEl","createElement","body","appendChild","opacity","innerHtml","rowHeader","lines","industryLabel","split","arrIndex","findIndex","element","listContent","object","j","this","_chart","pageXOffset","caretX","caretY","_bodyFontFamily","pointerEvents","loadTitleDemand","toLowerCase","enableTooltip","deterministic","fontSizes","fontWeight","padding","rotations","rotationAngles","scale","spiral","transitionDuration","enableOptimizations","words","MainPage","getElementsByTagName","Dashboard","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.012b0c63.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const SearchContext = createContext(null);\r\n\r\nconst SearchContextProvider = ({children}) => {\r\n    let [keyword, setKeyword] = useState(\"\");\r\n    let [searchType, setSearchType] = useState(0);\r\n    const store = {\r\n        keyword,\r\n        setKeyword,\r\n        searchType,\r\n        setSearchType\r\n    };\r\n    return(\r\n        <SearchContext.Provider value={store}>\r\n            {children}\r\n        </SearchContext.Provider>\r\n    );\r\n};\r\n\r\nexport default SearchContextProvider;","import React, { useEffect, useContext } from 'react';\r\nimport layer3 from '../img/layer3.png';\r\nimport layer1 from '../img/layer1.png';\r\nimport layer2 from '../img/layer2.png';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport '../styles/LandingPage.css';\r\n\r\nconst LandingPage = React.memo(({children}) =>{\r\n    let { searchType } = useContext(SearchContext);\r\n\r\n    function adjustTextLayer(){\r\n        let w = document.documentElement.clientWidth;\r\n        let offset = 450;\r\n        let textLayer = document.getElementById(\"text-layer1\");\r\n        textLayer.style.left = ((w - offset)/2) + 'px';\r\n\r\n        let navBody = document.querySelector(\".nav-body\");\r\n\r\n        if(w <= 870 && window.pageYOffset >= 350){\r\n            navBody.classList.add(\"hide\");\r\n        }else{\r\n            navBody.classList.remove(\"hide\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let layer1 = document.getElementById(\"layer1\");\r\n        let layer0 = document.getElementById(\"layer0\");\r\n        let scroll = window.pageYOffset;\r\n        let textLayer = document.getElementById(\"text-layer1\");\r\n        let logo = document.querySelector(\".nav-logo a\");\r\n        let about = document.querySelector(\".nav-rightItem a\");\r\n        adjustTextLayer();\r\n\r\n        document.addEventListener('scroll', (e)=>{\r\n            let offset = window.pageYOffset;\r\n            scroll = offset;\r\n            layer1.style.top = scroll/3 +'px';\r\n            layer0.style.top = scroll/2 + 'px';\r\n            textLayer.style.top = scroll / 1.5 + 'px';\r\n            if(scroll >= 600){\r\n                logo.style.color = 'white';\r\n                about.style.color = 'white';\r\n            }else{\r\n                logo.style.color = 'black';\r\n                about.style.color = 'black';\r\n            }\r\n\r\n            let navBody = document.querySelector(\".nav-body\");\r\n\r\n            if(document.documentElement.clientWidth <= 870 && scroll >= 350){\r\n                navBody.classList.add(\"hide\");\r\n            }else{\r\n                navBody.classList.remove(\"hide\");\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"resize\", adjustTextLayer);\r\n      });\r\n    return (\r\n        <div className=\"parallax-section\">\r\n            <div className=\"nav-body stay-top\">\r\n                <div className=\"nav-logo\">\r\n                    <a href=\"#section1\">Skillset Analyser</a>\r\n                </div>\r\n                <div className=\"nav-rightItem\">\r\n                    <a href=\"#section2\">About This Page</a>\r\n                </div>\r\n            </div>\r\n            <div id=\"text-layer1\">\r\n                <p id=\"p1\">Skillset Analysis</p>\r\n                {searchType === 0 && <p key={searchType} id=\"p2\">Find out what skill sets  <br></br> you need for your future career!</p>}\r\n                {searchType === 1 && <p key={searchType} id=\"p2\">Find out Vacancy Demand  <br></br> in any state of Malaysia!</p>}\r\n                \r\n            </div>\r\n            {children}\r\n            <img id=\"layer0\" src={layer3} alt=\"parallax-0\"/>\r\n            <img id=\"layer1\" src={layer1} alt=\"parallax-1\"/>\r\n            <img id=\"layer2\" src={layer2} alt=\"parallax-2\"/>\r\n        </div>  \r\n    );\r\n});\r\n\r\nexport default LandingPage;","export default {\r\n    // active url will be url: change url here\r\n    // to run api in ngrok, type ngrok http 5000 in cmd, and paste new url to below\r\n    url: \"https://skillset-analyser-api.herokuapp.com/\",\r\n    //url: \"https://dd17f4eff3a9.ngrok.io/\"\r\n    //url: \"http://localhost:5000/\"\r\n} ","import React, { useEffect, useState, useContext } from 'react';\r\nimport \"../styles/SearchBar.css\";\r\nimport axios from 'axios';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport config from '../config';\r\n\r\nconst SearchBar = ({ pop, setPop }) => {\r\n    const INITIAL_STATE = {data: [], press: false, loading: false};\r\n    const url = config.url;\r\n\r\n    let [query, setQuery] = useState(INITIAL_STATE);\r\n    let [input, setInput] = useState(\"\");\r\n    let { setKeyword, searchType, setSearchType } = useContext(SearchContext);\r\n\r\n    function search(keyword){\r\n        if(pop){\r\n            setPop(false);\r\n            setTimeout(()=>{\r\n                setPop(true);\r\n            }, 100);\r\n        }else{\r\n            setPop(true);\r\n        }\r\n        setQuery(INITIAL_STATE);\r\n        if(typeof(keyword) === \"string\"){\r\n            setKeyword(keyword);\r\n        }else{\r\n            setKeyword(input);\r\n        }\r\n        setInput(\"\");\r\n    }\r\n\r\n    function adjustTextLayer(){\r\n        let w = document.documentElement.clientWidth;\r\n        let offset = 600;\r\n        let searchBar = document.querySelector(\".bar\");\r\n        searchBar.style.left = ((w - offset)/2) + 'px';\r\n    }\r\n\r\n    function activeDropdown(){\r\n        let dropdown = document.getElementsByClassName(\"dropdown-content\")[0];\r\n        dropdown.classList.toggle(\"show\");\r\n    }\r\n\r\n    function selectDropdown(i){\r\n        let dropdown = document.getElementsByClassName(\"dropdown\")[0];\r\n        dropdown.value = i;\r\n        setSearchType(i);\r\n        setInput(\"\");\r\n    }\r\n\r\n    // Effect Hook that only run once\r\n    useEffect(()=>{\r\n        let searchBar = document.querySelector(\".bar\");\r\n        let scroll = window.pageYOffset;\r\n        adjustTextLayer();\r\n        window.addEventListener(\"resize\", adjustTextLayer);\r\n\r\n        //Scroll effect\r\n        document.addEventListener('scroll', (e)=>{\r\n            let offset = window.pageYOffset;\r\n            scroll = offset;\r\n            searchBar.style.top = 460 + scroll / 1.5 + 'px';\r\n\r\n            if(offset >= 500){\r\n                searchBar.classList.add(\"hide\");\r\n            }else{\r\n                searchBar.classList.remove(\"hide\");\r\n            }\r\n        });\r\n        // mouse event\r\n        document.addEventListener('mousedown', (e)=>{\r\n            if(!e.target.classList.contains(\"dropdown-item\")){\r\n                let dropdown = document.getElementsByClassName(\"dropdown-content\")[0];\r\n                dropdown.classList.toggle(\"show\", false);\r\n            }\r\n        })\r\n        // Keyboard event\r\n        document.addEventListener('keydown', (e)=>{\r\n            let querybar = document.getElementsByClassName('query-item');\r\n            let currentSelected = document.getElementsByClassName('keyselect')[0];\r\n            let innerHTML = \"\";\r\n            if(e.code === \"ArrowUp\" && document.querySelector(\".text-field\") === document.activeElement){\r\n                e.preventDefault();\r\n                if(currentSelected){\r\n                    let index = Array.prototype.indexOf.call(querybar, currentSelected);\r\n                    if(index === 0){\r\n                        innerHTML = querybar[index].innerHTML;\r\n                    }else{\r\n                        querybar[index-1].classList.toggle('keyselect');\r\n                        innerHTML = querybar[index-1].innerHTML;\r\n                        currentSelected.classList.toggle('keyselect');\r\n                    }\r\n                }else{\r\n                    innerHTML = document.querySelector(\".text-field\").value;\r\n                }\r\n                setInput(innerHTML);\r\n            }else if (e.code === \"ArrowDown\" && document.querySelector(\".text-field\") === document.activeElement){\r\n                e.preventDefault();\r\n                if(!currentSelected){\r\n                    innerHTML = querybar[0].innerHTML;\r\n                    querybar[0].classList.toggle('keyselect');\r\n                }else{\r\n                    let index = Array.prototype.indexOf.call(querybar, currentSelected);\r\n                    if(index === querybar.length-1){\r\n                        innerHTML = querybar[index].innerHTML;\r\n                    }else{\r\n                        querybar[index+1].classList.toggle('keyselect');\r\n                        innerHTML = querybar[index+1].innerHTML;\r\n                        currentSelected.classList.toggle('keyselect');\r\n                    }\r\n                }\r\n                setInput(innerHTML);\r\n            }\r\n\r\n            if(e.keyCode === 13 && document.querySelector(\".text-field\") === document.activeElement){\r\n                e.preventDefault();\r\n                innerHTML = currentSelected ? currentSelected.innerHTML : document.querySelector(\".text-field\").value;\r\n                let button = document.querySelector(\".submit-btn\");\r\n                button.click();\r\n            }\r\n        })\r\n    }, []);\r\n\r\n    // Effect Hook that only run when input vary \r\n    useEffect(()=>{\r\n        async function getQueryData(){\r\n            let data;\r\n            if(searchType === 0){\r\n                data = await axios.get(url+'api/search/'+encodeURI(input).replace(\"#\", \"%23\")).then(res => res.data);\r\n            }else{\r\n                data = await axios.get(url+'api/title_search/'+encodeURI(input).replace(\"#\", \"%23\")).then(res => res.data);\r\n            }\r\n            console.log(data);\r\n            setQuery({...query, data: data, loading: false});\r\n        }\r\n        \r\n        if(query !== INITIAL_STATE && query.loading === true){\r\n            getQueryData();\r\n        }\r\n    }, [input]);\r\n\r\n    return(\r\n        <div className=\"bar shadow\">\r\n            <div className=\"dropdown-box\" onClick={activeDropdown}>\r\n                <select name=\"type\" className=\"dropdown\">\r\n                    <option value=\"0\">Job Title</option>\r\n                    <option value=\"1\">Location</option>\r\n                </select>\r\n                <div className=\"dropdown-content shadow\">\r\n                    <div className=\"dropdown-item\" onClick={()=> selectDropdown(0)}>\r\n                        Job Title\r\n                    </div>\r\n                    <div className=\"dropdown-item\" onClick={()=> selectDropdown(1)}>\r\n                        Location\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <input className=\"text-field\" placeholder=\"Keywords....\" type=\"text\" value={input} onChange={(e) => {\r\n                setInput(e.target.value)\r\n                setQuery({...query, press: false, loading: true})\r\n            }}/>\r\n            {input.length > 0 && query.data.length > 0 && !query.press && <QueryBar data={query.data} setQuery={setQuery} setInput={setInput}/>}\r\n            <button className=\"submit-btn\" type=\"submit\" onClick={search}>Search</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst QueryBar = (props) =>{\r\n    const { data, setQuery, setInput } = props;\r\n\r\n    function onClickItem(title){\r\n        setQuery({data:[], press: true});\r\n        setInput(title);\r\n    }\r\n\r\n    return(\r\n        <div className=\"query-container\">\r\n            {data.map((item)=>{\r\n                return(\r\n                    <div className=\"query-item\" key={item._id} onClick={()=>{onClickItem(item.title)}}>\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport \"../styles/AboutPage.css\";\r\nimport layer3 from '../img/about-layer.png';\r\n\r\nconst AboutPage = React.memo(() => {\r\n    return(\r\n        <div className=\"about-container\" id=\"section2\">\r\n            <div className=\"about-background\">\r\n                <img src={layer3} alt=\"background\"/>\r\n            </div>\r\n            <div className=\"about-box\">\r\n                <div className=\"title\">\r\n                    <span>About This Page</span>\r\n                </div>\r\n                <div className=\"about-content\">\r\n                    <p>It is an analysis system to reveal top trending skill set for any job position and vacancy demand at any location via using data mining method!</p>\r\n                    <p>Skill set analysis was using Unsupervised Learning Method as most of the job adverts data was unstructured. <br></br>Vacancy Demand analysis was using frequency analysis on job adverts title to find which job title is the most frequent in an area.</p>\r\n                    <p>Both results was process using bigram model to predict the word is unigram or bigram.</p>\r\n                    <p>Website's Repo: <span id=\"link\">https://github.com/jasonlee96/Skillset-analysis</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ); \r\n});\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport \"../styles/Loading.css\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading-container\">\r\n            <div className=\"spinner\"></div>\r\n            <div className=\"loading-text\">\r\n                Loading...\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","export default {\r\n    legend: {\r\n        display: false\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            display: true,\r\n            scaleLabel:{\r\n                display:true,\r\n                labelString: \"Score\",\r\n                fontSize: 26,\r\n                fontFamily: 'Baloo Paaji, sans-serif',\r\n                fontStyle: 'bold',\r\n                fontColor: 'black'\r\n            },\r\n            ticks:{\r\n                beginAtZero: true,\r\n                fontSize: 18,\r\n                fontFamily: 'Baloo Paaji, sans-serif',\r\n                fontColor: 'black'\r\n            },\r\n            gridLines: {\r\n                display: true\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            display: true,\r\n            scaleLabel:{\r\n                display:true,\r\n                labelString: \"Term\",\r\n                fontSize: 26,\r\n                fontFamily: 'Baloo Paaji, sans-serif',\r\n                fontStyle: 'bold',\r\n                fontColor: 'black'\r\n            },\r\n            gridLines: {\r\n                display: false\r\n            },\r\n            ticks:{\r\n                fontSize: 18,\r\n                fontFamily: 'Baloo Paaji, sans-serif',\r\n                fontColor: 'black'\r\n            }\r\n        }],\r\n    },\r\n    animation: {\r\n        duration: 1500,\r\n        easing: 'easeOutCirc'\r\n    }\r\n};","export default {\r\n    animation: {\r\n        duration: 1500,\r\n        easing: 'easeOutCirc'\r\n    },\r\n    legend:{\r\n        position: 'right',\r\n        labels:{\r\n            fontColor: \"#222\",\r\n            fontSize: 18\r\n        }\r\n    },\r\n    tooltips: {\r\n        // Disable the on-canvas tooltip\r\n        enabled: false,\r\n    }\r\n}","import React, { useEffect, useContext, useState } from 'react';\r\nimport \"../styles/ResultPage.css\";\r\nimport axios from 'axios';\r\nimport Loading from './Loading';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport Chart from 'chart.js';\r\nimport ReactWordcloud from \"react-wordcloud\";\r\nimport config from '../config';\r\nimport barchartConfig from '../chartConfig/barchart';\r\nimport piechartConfig from '../chartConfig/piechart';\r\n\r\nconst ResultPage = () => {\r\n    let { keyword, searchType } = useContext(SearchContext);\r\n    const INITIAL_STATE = { data: {}, loading: true };\r\n    const url = config.url;\r\n    let [state, setState] = useState(INITIAL_STATE);\r\n    let [type, setType] = useState(0);\r\n    let [type1, setType1] = useState(0);\r\n    let [selectType, setSelectType] = useState(0);\r\n\r\n    const wordCloudOptions = {\r\n        colors: [\"#669911\", \"#119966\", \"#63c6c9\", \"#66A2EB\", \"#e45b65\", \"#b8412e\", \"#e568bd\", \"#5974c7\"],\r\n        enableTooltip: true,\r\n        deterministic: false,\r\n        fontFamily: \"Baloo Paaji, sans-serif\",\r\n        fontSizes: [20, 70],\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"normal\",\r\n        padding: 5,\r\n        rotations: 0,\r\n        rotationAngles: [0],\r\n        scale: \"log\",\r\n        spiral: \"rectangular\",\r\n        transitionDuration: 1000,\r\n        enableOptimizations: true\r\n      };\r\n \r\n    useEffect(() => {\r\n        let box = document.getElementById(\"section3\");\r\n        let position = box.getBoundingClientRect().top + 50;\r\n\r\n        window.scrollTo({\r\n            top: window.pageYOffset + position,\r\n            behavior: \"smooth\"\r\n        });\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        setState({ data: {}, loading: true });\r\n        setSelectType(searchType);\r\n        // TODO: C# keyword doesnot processed, need do extra url encode\r\n        async function getResultData(){\r\n            let data;\r\n            if(searchType === 0){\r\n                data = await axios.get(url+'api/result/' + encodeURI(keyword).replace(\"#\", \"%23\")).then((result)=> result.data[0]);\r\n            }else{\r\n                data = await axios.get(url+'api/title/' + encodeURI(keyword).replace(\"#\", \"%23\")).then((result)=> result.data[0]);\r\n            }\r\n            console.log(data);\r\n            setState({data: data, loading: false});\r\n        }\r\n        getResultData();\r\n    }, [keyword]);\r\n\r\n\r\n    function getColors(number){\r\n        let colorLoop = [\"#669911\", \"#119966\", \"#63c6c9\", \"#66A2EB\", \"#FCCE56\", \"#e45b65\", \"#b8412e\", \"#e568bd\", \"#5974c7\", \"#f3d174\"]\r\n        let colors = []\r\n        for (let i = 0; i < number; i++){\r\n            colors.push(colorLoop[i % 10]);\r\n        }\r\n        return colors;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let { data, loading } = state;\r\n\r\n        if(data === undefined || !data.title){\r\n            return ;\r\n        }\r\n        if(searchType === 0){\r\n            loadSkillSet(data, loading);\r\n        }else{\r\n            loadTitleDemand(data, loading);\r\n        }\r\n        \r\n    }, [state.data, type]);\r\n\r\n    function loadSkillSet(data, loading){\r\n        if(!loading){\r\n            let choices = document.querySelectorAll(\".result-chart-type>div\");\r\n            console.log(choices[0].classList);\r\n            for (let i = 0; i < choices.length; i++){\r\n                choices[i].classList.remove('selected');\r\n            }\r\n            choices[type].classList.add('selected');\r\n        }\r\n\r\n        if(type === 0){\r\n            let dataset = data.results.slice(0,20);\r\n            let term = [];\r\n            let value = [];\r\n            dataset.map((data)=>{\r\n                term.push(data.text);\r\n                value.push(data.value);\r\n            });\r\n\r\n            let canvas = document.querySelector('#chart');\r\n            let processData = {\r\n                labels: term,\r\n                datasets: [{\r\n                    label: \"Score Value\",\r\n                    data: value,\r\n                    backgroundColor: getColors(term.length),\r\n                    barPercentage: 0.95,\r\n                    barThickness: 'flex',\r\n                    categoryPercentage: 1.0\r\n                }]\r\n            };\r\n\r\n            new Chart(canvas, {\r\n                type: 'horizontalBar',\r\n                data: processData,\r\n                options: barchartConfig\r\n            });\r\n        }\r\n    }\r\n\r\n    function loadTitleDemand(data, loading){\r\n        if(!loading){\r\n            let choices = document.querySelectorAll(\".result-chart-type>div\");\r\n            console.log(choices[0].classList);\r\n            for (let i = 0; i < choices.length; i++){\r\n                choices[i].classList.remove('selected');\r\n            }\r\n            choices[type1].classList.add('selected');\r\n        }\r\n\r\n        if(type1===0){\r\n            let industry = []\r\n            let count = []\r\n            let dataArr = data.results.sort((x, y) => y.count-x.count);\r\n            let top8Arr = dataArr.slice(0,8); \r\n            let otherArr = dataArr.slice(8,dataArr.length);\r\n            let sum = dataArr.reduce((accumulator, currentVal)=>{\r\n                return accumulator + currentVal.count;\r\n            }, 0)\r\n            top8Arr.map((data)=>{\r\n                industry.push(data.industry);\r\n                count.push((data.count/sum * 100).toFixed(2));\r\n            });\r\n            let otherSum = otherArr.reduce((accumulator, currentVal)=>{\r\n                return accumulator + currentVal.count;\r\n            }, 0)\r\n            industry.push(\"Others\");\r\n            count.push((otherSum/sum * 100).toFixed(2));\r\n\r\n            let canvas = document.querySelector('#chart');\r\n            let processData = {\r\n                labels: industry,\r\n                datasets: [{\r\n                    label: \"Score Value\",\r\n                    data: count,\r\n                    backgroundColor: [\"#f03434\", \"#19b5fe\", \"#7befb2\", \"#f5d76e\", \"#f2784b\", \"#67809f\" ,\"#ec644b\" ,\r\n                    \"#be90d4\" ,\"#c8f7c5\" ,\"#89c4f4\" ,\"#65c6bb\" ,\"#446cb3\"],\r\n                    borderColor: '#6667'\r\n                }]\r\n            };\r\n\r\n            new Chart(canvas, {\r\n                type: 'pie',\r\n                data: processData,\r\n                options: piechartConfig\r\n            });\r\n            \r\n            piechartConfig[\"tooltips\"][\"custom\"] = function(tooltipModel) {\r\n                // Tooltip Element\r\n                var tooltipEl = document.getElementById('chartjs-tooltip');\r\n    \r\n                // Create element on first render\r\n                if (!tooltipEl) {\r\n                    tooltipEl = document.createElement('div');\r\n                    tooltipEl.id = 'chartjs-tooltip';\r\n                    tooltipEl.innerHTML = '<table style=\"border-spacing: 0 5px; background: #333;  color: white; border-radius: 15px; border-width: 2px; padding: 15px\"></table>';\r\n                    document.body.appendChild(tooltipEl);\r\n                }\r\n    \r\n                // Hide if no tooltip\r\n                if (tooltipModel.opacity === 0) {\r\n                    tooltipEl.style.opacity = 0;\r\n                    return;\r\n                }\r\n    \r\n    \r\n                // Set Text\r\n                if (tooltipModel.body) {\r\n                    var style = 'font-size: 16px;border-spacing: 0px;'\r\n                    let innerHtml = '<tbody style=\"'+style+'\">';\r\n                    var rowHeader = '<tr rowspacing=\"5px\"><td><span>';\r\n                    let rowFooter = '</span></td></tr>'\r\n                    innerHtml += rowHeader + tooltipModel.body[0].lines[0] + ' %' + rowFooter;\r\n                   \r\n                    let industryLabel = tooltipModel.body[0].lines[0].split(':')[0];\r\n                    let arrIndex = dataArr.findIndex((element)=>{\r\n                        return element.industry === industryLabel\r\n                    });\r\n                    let listHeader = \"<ul style='padding: 0; margin: 0;padding-left: 20px;'>\";\r\n                    let listFooter = \"</ul>\";\r\n                    let listContent = \"\";\r\n                    if(arrIndex >= 0){\r\n                        dataArr[arrIndex].results.map((object)=>{\r\n                            listContent += \"<li style='padding: 7px 0px;'>\" + object[0] + \"</li>\";\r\n                        })\r\n                    }\r\n                    let count = 0;\r\n                    const MAX_COUNT = 13;\r\n                    if (arrIndex === -1){\r\n                        for(let i = 0; i < otherArr.length; i++){\r\n                            if(count > MAX_COUNT){\r\n                                break;\r\n                            }\r\n                            for (let j = 0; j < otherArr[i].results.length; j++){\r\n                                if(count > MAX_COUNT){\r\n                                    break;\r\n                                }\r\n                                listContent += \"<li style='padding: 7px 0px;'>\" + otherArr[i].results[j][0] + \"</li>\";\r\n                                count++;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (listContent !== \"\"){\r\n                        innerHtml += rowHeader +'Vacancy Demand in ' + industryLabel+ rowFooter;\r\n                    }\r\n                    innerHtml += rowHeader + listHeader + listContent + listFooter + rowFooter;\r\n                    \r\n                    var tableRoot = tooltipEl.querySelector('table');\r\n                    innerHtml += '</tbody>';\r\n                    tableRoot.innerHTML = innerHtml;\r\n                    \r\n                }\r\n    \r\n                // `this` will be the overall tooltip\r\n                var position = this._chart.canvas.getBoundingClientRect();\r\n    \r\n                // Display, position, and set styles for font\r\n                tooltipEl.style.opacity = 1;\r\n                tooltipEl.style.position = 'absolute';\r\n                tooltipEl.style.left = position.left + window.pageXOffset + tooltipModel.caretX + 'px';\r\n                tooltipEl.style.top = position.top + window.pageYOffset + tooltipModel.caretY + 'px';\r\n                tooltipEl.style.fontFamily = tooltipModel._bodyFontFamily;\r\n                tooltipEl.style.pointerEvents = 'none';\r\n            }\r\n\r\n            new Chart(canvas, {\r\n                type: 'pie',\r\n                data: processData,\r\n                options: piechartConfig\r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"result-container\" id=\"section3\">\r\n            {state.loading ? <Loading/> :\r\n            <div className=\"result-box shadow\">\r\n                <div className=\"result-title\">\r\n                    {state.data ? state.data.title.toLowerCase() === keyword.toLowerCase() ? <h3>Result for <span>{state.data.title}</span></h3> : <h3>Keyword Not Found. Do You Mean <span>{state.data.title}</span>?</h3> : <h3>Keyword Not Found. </h3>}\r\n                </div>\r\n                {state.data && selectType===0 &&\r\n                <div className=\"result-chart-type\">\r\n                    <div onClick={()=>{ setType(0) }}>Bar Chart</div>\r\n                    <div onClick={()=>{ setType(1) }}>Word Cloud</div>\r\n                </div>}\r\n                {state.data && selectType===1 &&\r\n                <div className=\"result-chart-type\">\r\n                    <div onClick={()=>{ setType1(0) }}>Pie Chart</div>\r\n                </div>}\r\n                <div className=\"result-chart\">\r\n                    {type === 0 && <canvas id=\"chart\"></canvas>}\r\n                    {type === 1 && <ReactWordcloud options={wordCloudOptions} words={state.data.results.slice(0,70)} />}\r\n                    \r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultPage;","import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport { LandingPage, SearchBar, AboutPage, ResultPage } from './';\r\nimport SearchContextProvider from '../contexts/SearchContext';\r\n\r\nconst MainPage = () => {\r\n    let [pop, setPop] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        let body = document.getElementsByTagName('body')[0];\r\n        setTimeout(()=>{\r\n        body.classList.toggle('fade');\r\n        }, 500)\r\n    });\r\n\r\n    return (\r\n        <SearchContextProvider>\r\n            <div className=\"Main\" id=\"section1\">\r\n                <LandingPage>\r\n                    <SearchBar pop={pop} setPop={setPop} />\r\n                </LandingPage>\r\n                {pop && <ResultPage />}\r\n                <AboutPage />\r\n            </div>\r\n        </SearchContextProvider>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n    return(\r\n        <div>\r\n            <p>Hello Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque tempora maiores laudantium architecto iusto at illum, ratione veritatis a quia, assumenda eaque dignissimos animi eveniet inventore odit, consectetur molestias cum.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\nimport { MainPage, Dashboard } from './components';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/Skillset-Analysis\" exact component={MainPage} />\n        <Route path=\"/Skillset-Analysis/dashboard\" component={Dashboard} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/layer3.1f1544b4.png\";","module.exports = __webpack_public_path__ + \"static/media/layer1.7bc09400.png\";","module.exports = __webpack_public_path__ + \"static/media/layer2.13499336.png\";","module.exports = __webpack_public_path__ + \"static/media/about-layer.6dba1c0a.png\";"],"sourceRoot":""}