{"version":3,"sources":["components/LandingPage.jsx","contexts/SearchContext.jsx","components/SearchBar.jsx","components/AboutPage.jsx","components/Loading.jsx","components/ResultPage.jsx","components/MainPage.jsx","components/Dashboard.jsx","App.jsx","serviceWorker.js","index.js","img/layer3.png","img/layer1.png","img/layer2.png","img/about-layer.png"],"names":["LandingPage","React","memo","children","adjustTextLayer","w","document","documentElement","clientWidth","getElementById","style","left","navBody","querySelector","window","pageYOffset","classList","add","remove","useEffect","layer1","layer0","scroll","textLayer","logo","about","addEventListener","e","offset","top","color","className","href","id","src","layer3","alt","layer2","SearchContext","createContext","SearchContextProvider","useState","store","keyword","setKeyword","Provider","value","QueryBar","props","data","setQuery","setInput","map","item","key","_id","onClick","title","press","SearchBar","pop","setPop","INITIAL_STATE","loading","query","input","useContext","selectDropdown","i","getElementsByClassName","searchBar","a","axios","get","then","res","getQueryData","toggle","name","placeholder","type","onChange","target","length","setTimeout","AboutPage","Loading","ResultPage","state","setState","setType","getColors","number","colorLoop","colors","push","position","getBoundingClientRect","scrollTo","behavior","encodeURI","result","getResultData","undefined","choices","querySelectorAll","console","log","dataset","results","slice","term","text","canvas","processData","labels","datasets","label","backgroundColor","barPercentage","barThickness","categoryPercentage","Chart","options","legend","display","scales","xAxes","scaleLabel","labelString","fontSize","fontFamily","fontStyle","fontColor","ticks","beginAtZero","gridLines","yAxes","animation","duration","easing","toLowerCase","enableTooltip","deterministic","fontSizes","fontWeight","padding","rotations","rotationAngles","scale","spiral","transitionDuration","words","MainPage","body","getElementsByTagName","Dashboard","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.36661ffa.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport layer3 from '../img/layer3.png';\r\nimport layer1 from '../img/layer1.png';\r\nimport layer2 from '../img/layer2.png';\r\nimport '../styles/LandingPage.css';\r\n\r\nconst LandingPage = React.memo(({children}) =>{\r\n    function adjustTextLayer(){\r\n        let w = document.documentElement.clientWidth;\r\n        let offset = 450;\r\n        let textLayer = document.getElementById(\"text-layer1\");\r\n        textLayer.style.left = ((w - offset)/2) + 'px';\r\n\r\n        let navBody = document.querySelector(\".nav-body\");\r\n\r\n        if(w <= 870 && window.pageYOffset >= 350){\r\n            navBody.classList.add(\"hide\");\r\n        }else{\r\n            navBody.classList.remove(\"hide\");\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        let layer1 = document.getElementById(\"layer1\");\r\n        let layer0 = document.getElementById(\"layer0\");\r\n        let scroll = window.pageYOffset;\r\n        let textLayer = document.getElementById(\"text-layer1\");\r\n        let logo = document.querySelector(\".nav-logo a\");\r\n        let about = document.querySelector(\".nav-rightItem a\");\r\n        adjustTextLayer();\r\n\r\n        document.addEventListener('scroll', (e)=>{\r\n            let offset = window.pageYOffset;\r\n            scroll = offset;\r\n            layer1.style.top = scroll/3 +'px';\r\n            layer0.style.top = scroll/2 + 'px';\r\n            textLayer.style.top = scroll / 1.5 + 'px';\r\n            if(scroll >= 600){\r\n                logo.style.color = 'white';\r\n                about.style.color = 'white';\r\n            }else{\r\n                logo.style.color = 'black';\r\n                about.style.color = 'black';\r\n            }\r\n\r\n            let navBody = document.querySelector(\".nav-body\");\r\n\r\n            if(document.documentElement.clientWidth <= 870 && scroll >= 350){\r\n                navBody.classList.add(\"hide\");\r\n            }else{\r\n                navBody.classList.remove(\"hide\");\r\n            }\r\n        });\r\n\r\n        window.addEventListener(\"resize\", adjustTextLayer);\r\n      });\r\n    return (\r\n        <div className=\"parallax-section\">\r\n            <div className=\"nav-body stay-top\">\r\n                <div className=\"nav-logo\">\r\n                    <a href=\"#section1\">Skillset Analyser</a>\r\n                </div>\r\n                <div className=\"nav-rightItem\">\r\n                    <a href=\"#section2\">About This Page</a>\r\n                </div>\r\n            </div>\r\n            <div id=\"text-layer1\">\r\n                <p id=\"p1\">Skillset Analysis</p>\r\n                <p id=\"p2\">Find out what skill sets  <br></br> you need for your future career!</p>\r\n            </div>\r\n            {children}\r\n            <img id=\"layer0\" src={layer3} alt=\"parallax-0\"/>\r\n            <img id=\"layer1\" src={layer1} alt=\"parallax-1\"/>\r\n            <img id=\"layer2\" src={layer2} alt=\"parallax-2\"/>\r\n        </div>  \r\n    );\r\n});\r\n\r\nexport default LandingPage;","import React, { createContext, useState } from 'react';\r\n\r\nexport const SearchContext = createContext(null);\r\n\r\nconst SearchContextProvider = ({children}) => {\r\n    let [keyword, setKeyword] = useState(\"\");\r\n\r\n    const store = {\r\n        keyword,\r\n        setKeyword\r\n    };\r\n    return(\r\n        <SearchContext.Provider value={store}>\r\n            {children}\r\n        </SearchContext.Provider>\r\n    );\r\n};\r\n\r\nexport default SearchContextProvider;","import React, { useEffect, useState, useContext } from 'react';\r\nimport \"../styles/SearchBar.css\";\r\nimport axios from 'axios';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\n\r\nconst SearchBar = ({ pop, setPop }) => {\r\n    const INITIAL_STATE = {data: [], press: false, loading: false};\r\n    let [query, setQuery] = useState(INITIAL_STATE);\r\n    let [input, setInput] = useState(\"\");\r\n    let { setKeyword } = useContext(SearchContext);\r\n\r\n    function search(){\r\n        if(pop){\r\n            setPop(false);\r\n            setTimeout(()=>{\r\n                setPop(true);\r\n            }, 100);\r\n        }else{\r\n            setPop(true);\r\n        }\r\n        setQuery(INITIAL_STATE);\r\n        setInput(\"\");\r\n        setKeyword(input);\r\n    }\r\n\r\n    function adjustTextLayer(){\r\n        let w = document.documentElement.clientWidth;\r\n        let offset = 600;\r\n        let searchBar = document.querySelector(\".bar\");\r\n        searchBar.style.left = ((w - offset)/2) + 'px';\r\n    }\r\n\r\n    function activeDropdown(){\r\n        let dropdown = document.getElementsByClassName(\"dropdown-content\")[0];\r\n        dropdown.classList.toggle(\"show\");\r\n    }\r\n\r\n    function selectDropdown(i){\r\n        let dropdown = document.getElementsByClassName(\"dropdown\")[0];\r\n        dropdown.value = i;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let searchBar = document.querySelector(\".bar\");\r\n        let scroll = window.pageYOffset;\r\n        adjustTextLayer();\r\n        window.addEventListener(\"resize\", adjustTextLayer);\r\n\r\n        document.addEventListener('scroll', (e)=>{\r\n            let offset = window.pageYOffset;\r\n            scroll = offset;\r\n            searchBar.style.top = 460 + scroll / 1.5 + 'px';\r\n\r\n            if(offset >= 500){\r\n                searchBar.classList.add(\"hide\");\r\n            }else{\r\n                searchBar.classList.remove(\"hide\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        async function getQueryData(){\r\n            let data = await axios.get('https://skillset-analyser-api.herokuapp.com/api/search/'+input).then(res => res.data);\r\n\r\n            setQuery({...query, data: data, loading: false});\r\n        }\r\n        \r\n        if(query !== INITIAL_STATE && query.loading === true){\r\n            getQueryData();\r\n        }\r\n    }, [input]);\r\n\r\n    return(\r\n        <div className=\"bar shadow\">\r\n            <div className=\"dropdown-box\" onClick={activeDropdown}>\r\n                <select name=\"type\" className=\"dropdown\">\r\n                    <option value=\"0\">Job Title</option>\r\n                    <option value=\"1\">Location</option>\r\n                </select>\r\n                <div className=\"dropdown-content shadow\">\r\n                    <div className=\"dropdown-item\" onClick={()=> selectDropdown(0)}>\r\n                        Job Title\r\n                    </div>\r\n                    <div className=\"dropdown-item\" onClick={()=> selectDropdown(1)}>\r\n                        Location\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <input className=\"text-field\" placeholder=\"Keywords....\" type=\"text\" value={input} onChange={(e) => {\r\n                setInput(e.target.value)\r\n                setQuery({...query, press: false, loading: true})\r\n            }}/>\r\n            {input.length > 0 && query.data.length > 0 && !query.press && <QueryBar data={query.data} setQuery={setQuery} setInput={setInput}/>}\r\n            <button className=\"submit-btn\" type=\"submit\" onClick={search}>Search</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst QueryBar = (props) =>{\r\n    const { data, setQuery, setInput } = props;\r\n\r\n    function onClickItem(title){\r\n        setQuery({data:[], press: true});\r\n        setInput(title);\r\n    }\r\n\r\n    return(\r\n        <div className=\"query-container\">\r\n            {data.map((item)=>{\r\n                return(\r\n                    <div className=\"query-item\" key={item._id} onClick={()=>{onClickItem(item.title)}}>\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport \"../styles/AboutPage.css\";\r\nimport layer3 from '../img/about-layer.png';\r\n\r\nconst AboutPage = React.memo(() => {\r\n    return(\r\n        <div className=\"about-container\" id=\"section2\">\r\n            <div className=\"about-background\">\r\n                <img src={layer3} alt=\"background\"/>\r\n            </div>\r\n            <div className=\"about-box\">\r\n                <div className=\"title\">\r\n                    <span>About This Page</span>\r\n                </div>\r\n                <div className=\"about-content\">\r\n                    <p>It is an analysis system to reveal top trending skill set for any job position and vacancy demand at any location via using data mining method!</p>\r\n                    <p>Author's GitHub: <span id=\"link\">https://github.com/jasonlee96</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ); \r\n});\r\n\r\nexport default AboutPage;","import React, { useState, useEffect } from 'react';\r\nimport \"../styles/Loading.css\";\r\n\r\nconst Loading = () => {\r\n    useEffect(() => {\r\n\r\n    });\r\n    return (\r\n        <div className=\"loading-container\">\r\n            <div className=\"spinner\"></div>\r\n            <div className=\"loading-text\">\r\n                Loading...\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;","import React, { useEffect, useContext, useState } from 'react';\r\nimport \"../styles/ResultPage.css\";\r\nimport axios from 'axios';\r\nimport Loading from './Loading';\r\nimport { SearchContext } from '../contexts/SearchContext';\r\nimport Chart from 'chart.js';\r\nimport ReactWordcloud from \"react-wordcloud\";\r\n\r\nconst ResultPage = () => {\r\n    let { keyword } = useContext(SearchContext);\r\n    const INITIAL_STATE = { data: {}, loading: true };\r\n    let [state, setState] = useState(INITIAL_STATE);\r\n    let [type, setType] = useState(0);\r\n\r\n    const wordCloudOptions = {\r\n        colors: [\"#669911\", \"#119966\", \"#63c6c9\", \"#66A2EB\", \"#e45b65\", \"#b8412e\", \"#e568bd\", \"#5974c7\"],\r\n        enableTooltip: true,\r\n        deterministic: true,\r\n        fontFamily: \"Baloo Paaji, cursive\",\r\n        fontSizes: [20, 100],\r\n        fontStyle: \"normal\",\r\n        fontWeight: \"normal\",\r\n        padding: 5,\r\n        rotations: 0,\r\n        rotationAngles: [0],\r\n        scale: \"log\",\r\n        spiral: \"rectangular\",\r\n        transitionDuration: 1000\r\n      };\r\n \r\n    useEffect(() => {\r\n        let box = document.getElementById(\"section3\");\r\n        let position = box.getBoundingClientRect().top + 50;\r\n\r\n        window.scrollTo({\r\n            top: window.pageYOffset + position,\r\n            behavior: \"smooth\"\r\n        });\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        setState({ data: {}, loading: true });\r\n        async function getResultData(){\r\n            let data = await axios.get('https://skillset-analyser-api.herokuapp.com/api/result/' + encodeURI(keyword)).then((result)=> result.data[0]);\r\n            setState({data: data, loading: false});\r\n        }\r\n        getResultData();\r\n    }, [keyword]);\r\n\r\n\r\n    function getColors(number){\r\n        let colorLoop = [\"#669911\", \"#119966\", \"#63c6c9\", \"#66A2EB\", \"#FCCE56\", \"#e45b65\", \"#b8412e\", \"#e568bd\", \"#5974c7\", \"#f3d174\"]\r\n        let colors = []\r\n        for (let i = 0; i < number; i++){\r\n            colors.push(colorLoop[i % 10]);\r\n        }\r\n        return colors;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        let { data, loading } = state;\r\n\r\n        if(data === undefined || !data.title){\r\n            return ;\r\n        }\r\n\r\n        if(!loading){\r\n            let choices = document.querySelectorAll(\".result-chart-type>div\");\r\n            console.log(choices[0].classList);\r\n            for (let i = 0; i < choices.length; i++){\r\n                choices[i].classList.remove('selected');\r\n            }\r\n            choices[type].classList.add('selected');\r\n        }\r\n\r\n        if(type === 0){\r\n            let dataset = data.results.slice(0,20);\r\n            let term = [];\r\n            let value = [];\r\n            dataset.map((data)=>{\r\n                term.push(data.text);\r\n                value.push(data.value);\r\n            });\r\n\r\n            let canvas = document.querySelector('#chart');\r\n            let processData = {\r\n                labels: term,\r\n                datasets: [{\r\n                    label: \"Score Value\",\r\n                    data: value,\r\n                    backgroundColor: getColors(term.length),\r\n                    barPercentage: 0.95,\r\n                    barThickness: 'flex',\r\n                    categoryPercentage: 1.0\r\n                }]\r\n            };\r\n\r\n            let chartOption = {\r\n                legend: {\r\n                    display: false\r\n                },\r\n                scales: {\r\n                    xAxes: [{\r\n                        display: true,\r\n                        scaleLabel:{\r\n                            display:true,\r\n                            labelString: \"Score\",\r\n                            fontSize: 26,\r\n                            fontFamily: 'Baloo Paaji, cursive',\r\n                            fontStyle: 'bold',\r\n                            fontColor: 'black'\r\n                        },\r\n                        ticks:{\r\n                            beginAtZero: true,\r\n                            fontSize: 18,\r\n                            fontFamily: 'Baloo Paaji, cursive',\r\n                            fontColor: 'black'\r\n                        },\r\n                        gridLines: {\r\n                            display: true\r\n                        }\r\n                    }],\r\n                    yAxes: [{\r\n                        display: true,\r\n                        scaleLabel:{\r\n                            display:true,\r\n                            labelString: \"Term\",\r\n                            fontSize: 26,\r\n                            fontFamily: 'Baloo Paaji, cursive',\r\n                            fontStyle: 'bold',\r\n                            fontColor: 'black'\r\n                        },\r\n                        gridLines: {\r\n                            display: false\r\n                        },\r\n                        ticks:{\r\n                            fontSize: 18,\r\n                            fontFamily: 'Baloo Paaji, cursive',\r\n                            fontColor: 'black'\r\n                        }\r\n                    }],\r\n                },\r\n                animation: {\r\n                    duration: 1500,\r\n                    easing: 'easeOutCirc'\r\n                }\r\n            };\r\n            new Chart(canvas, {\r\n                type: 'horizontalBar',\r\n                data: processData,\r\n                options: chartOption\r\n            });\r\n        }\r\n    }, [state.data, type]);\r\n    console.log(!state.data);\r\n    return(\r\n        <div className=\"result-container\" id=\"section3\">\r\n            {state.loading ? <Loading/> :\r\n            <div className=\"result-box shadow\">\r\n                <div className=\"result-title\">\r\n                    {state.data ? state.data.title.toLowerCase() === keyword.toLowerCase() ? <h3>Result for <span>{state.data.title}</span></h3> : <h3>Keyword Not Found. Do You Mean <span>{state.data.title}</span>?</h3> : <h3>Keyword Not Found. </h3>}\r\n                </div>\r\n                {state.data &&\r\n                <div className=\"result-chart-type\">\r\n                    <div onClick={()=>{ setType(0) }}>Bar Chart</div>\r\n                    <div onClick={()=>{ setType(1) }}>Word Cloud</div>\r\n                </div>}\r\n                <div className=\"result-chart\">\r\n                    {type === 0 && <canvas id=\"chart\"></canvas>}\r\n                    {type === 1 && <ReactWordcloud options={wordCloudOptions} words={state.data.results} />}\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultPage;","import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport { LandingPage, SearchBar, AboutPage, ResultPage } from './';\r\nimport SearchContextProvider from '../contexts/SearchContext';\r\n\r\nconst MainPage = () => {\r\n    let [pop, setPop] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        let body = document.getElementsByTagName('body')[0];\r\n        setTimeout(()=>{\r\n        body.classList.toggle('fade');\r\n        }, 500)\r\n    });\r\n\r\n    return (\r\n        <SearchContextProvider>\r\n            <div className=\"Main\" id=\"section1\">\r\n                <LandingPage>\r\n                    <SearchBar pop={pop} setPop={setPop} />\r\n                </LandingPage>\r\n                {pop && <ResultPage />}\r\n                <AboutPage />\r\n            </div>\r\n        </SearchContextProvider>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nconst Dashboard = () => {\r\n    return(\r\n        <div>\r\n            <p>Hello Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque tempora maiores laudantium architecto iusto at illum, ratione veritatis a quia, assumenda eaque dignissimos animi eveniet inventore odit, consectetur molestias cum.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\nimport { MainPage, Dashboard } from './components';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/Skillset-Analysis\" exact component={MainPage} />\n        <Route path=\"/Skillset-Analysis/dashboard\" component={Dashboard} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/layer3.1f1544b4.png\";","module.exports = __webpack_public_path__ + \"static/media/layer1.7bc09400.png\";","module.exports = __webpack_public_path__ + \"static/media/layer2.13499336.png\";","module.exports = __webpack_public_path__ + \"static/media/about-layer.6dba1c0a.png\";"],"sourceRoot":""}